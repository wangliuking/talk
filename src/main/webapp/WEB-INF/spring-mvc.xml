<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:mvc="http://www.springframework.org/schema/mvc"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans    
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd    
                        http://www.springframework.org/schema/mvc    
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">  
                          
 
     <!--避免IE执行AJAX时，返回JSON出现下载文件 --> 
    <bean id="mappingJacksonHttpMessageConverter"  
        class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">  
        <property name="supportedMediaTypes">  
            <list>  
                <value>text/html;charset=UTF-8</value>  
            </list>  
        </property>  
    </bean> 
     <!-- 添加注解驱动 -->    
    <mvc:annotation-driven />  
    <mvc:default-servlet-handler/>  
      
    <!-- 设置使用注解的类所在的包 -->  
    <context:component-scan base-package="com.talk.controller,com.talk.listener" />

    <!-- 配置默认的请求资源名，当请求为 "/" 将发起 customer/home请求-->
	<mvc:view-controller path="/" view-name="redirect:/customer/index"/>  
      
    <!-- 完成请求和注解POJO的映射 -->  
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">  
        <property name="messageConverters">  
            <list>  
                <ref bean="mappingJacksonHttpMessageConverter" /> <!-- JSON转换器 -->  
            </list>  
        </property>  
    </bean>  
      
    <!-- 需要导入spring-context-support-4.2.5.RELEASE.jar -->
	 <bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
	 <!-- 指定freemarker模板所在文件夹（前缀） -->
	 <property name="templateLoaderPaths" value="/pages/,/WEB-INF/admin/"/>
	 <!-- 指定模板编码 -->
	 <property name="defaultEncoding" value="UTF-8"/>
	 </bean>
	 
	 <!-- Freemarker视图解析器 -->
	<bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
	<!-- 指定视图后缀 -->
	<property name="suffix" value=".ftl"/>
	<!-- 指定模板文件中编码 -->
	<property name="contentType" value="text/html;charset=UTF-8"/>
	<!-- 通过Request对象使用req对应进行映射，方便在页面使用 -->
	<property name="requestContextAttribute" value="request"/>
	</bean>  
      
    <!-- SpringMVC上传文件时，需要配置MultipartResolver处理器-->  
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">    
        <!-- 默认编码 -->  
        <property name="defaultEncoding" value="utf-8" />    
        <!-- 文件大小最大值 -->  
        <property name="maxUploadSize" value="10485760000" />    
        <!-- 内存中的最大值 -->  
        <property name="maxInMemorySize" value="40960" />    
    </bean>
   
    <!-- 配置后台拦截器类 -->
	<bean id="loginInterceptor" class="com.talk.interceptor.LoginInterceptor"/>
	<!-- 配置拦截器拦截操作 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<!-- 配置需要拦截请求 -->
			<mvc:mapping path="/admin/*/*"/>
			<!-- 配置不需要拦截请求 -->
			<mvc:exclude-mapping path="/admin/app/download"/>
			<!-- 使用拦截器的名称 -->
			<ref bean="loginInterceptor"/>
		</mvc:interceptor>
	</mvc:interceptors>   
  
</beans>